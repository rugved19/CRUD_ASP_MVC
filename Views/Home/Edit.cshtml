@model EFCodeFirstApproach.Models.Student

@{
    ViewBag.Title = "Edit Student";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.Title</title>

    <!-- Bootstrap & Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #89f7fe, #66a6ff);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: flex-start;
            padding-top: 50px;
        }

        .glass-card {
            background: rgba(255, 255, 255, 0.2);
            border-radius: 20px;
            box-shadow: 0 8px 32px rgba(31, 38, 135, 0.2);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            padding: 30px;
            width: 90%;
            max-width: 600px;
        }

        .form-label {
            font-weight: 600;
        }

        .btn {
            border-radius: 8px;
        }

        .alert {
            border-radius: 10px;
        }
    </style>
</head>
<body>
    <div class="glass-card">
        <h2 class="mb-4 text-dark">Edit Student</h2>

        @if (ViewBag.UpdateMessage != null)
        {
            <div class="alert alert-info">@Html.Raw(ViewBag.UpdateMessage)</div>
        }

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.Id)
            @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })

            <div class="mb-3">
                @Html.LabelFor(model => model.Name, new { @class = "form-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Gender, new { @class = "form-label" })
                @Html.DropDownListFor(model => model.Gender,
                    new SelectList(new[] {
                        new { Value = "", Text = "Select gender" },
                        new { Value = "Male", Text = "Male" },
                        new { Value = "Female", Text = "Female" },
                        new { Value = "Other", Text = "Other" }
                    }, "Value", "Text", Model.Gender),
                    new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Age, new { @class = "form-label" })
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter age" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>

            <div class="d-flex justify-content-between">
                <input type="submit" value="Save Changes" class="btn btn-primary px-4" />
                <a href="@Url.Action("Index")" class="btn btn-secondary">Back to List</a>
            </div>
        }
    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation-unobtrusive@3.2.12/dist/jquery.validate.unobtrusive.min.js"></script>
</body>
</html>
